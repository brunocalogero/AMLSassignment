X_train of shape: (3636, 250)
y_train of shape: (3636,)
X_test of shape: (910, 250)
y_test of shape: (910,)
X_train of shape: (2908, 250)
y_train of shape: (2908,)
X_val of shape: (728, 250)
y_val of shape: (728,)
X_test of shape: (910, 250)
y_test of shape: (910,)
Start grid search at 2019-01-05 01:15:16.899822
{'split8_train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'param_C': masked_array(data=[0.01, 0.01, 0.01, 0.1, 0.1, 0.1, 1, 1, 1, 10, 10, 10],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'rank_test_score': array([3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 1]), 'split7_test_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'split3_train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'split1_test_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'split4_train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'split0_train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'mean_fit_time': array([0.10661521, 0.19053407, 0.75059443, 0.10412796, 0.14484184,
       1.48818498, 0.10412951, 0.10422673, 1.92210262, 0.10422997,
       0.10412674, 1.89171736]), 'params': [{'solver': 'lbfgs', 'C': 0.01}, {'solver': 'newton-cg', 'C': 0.01}, {'solver': 'sag', 'C': 0.01}, {'solver': 'lbfgs', 'C': 0.1}, {'solver': 'newton-cg', 'C': 0.1}, {'solver': 'sag', 'C': 0.1}, {'solver': 'lbfgs', 'C': 1}, {'solver': 'newton-cg', 'C': 1}, {'solver': 'sag', 'C': 1}, {'solver': 'lbfgs', 'C': 10}, {'solver': 'newton-cg', 'C': 10}, {'solver': 'sag', 'C': 10}], 'param_solver': masked_array(data=['lbfgs', 'newton-cg', 'sag', 'lbfgs', 'newton-cg',
                   'sag', 'lbfgs', 'newton-cg', 'sag', 'lbfgs',
                   'newton-cg', 'sag'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'std_train_score': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), 'mean_score_time': array([0.00010056, 0.00090451, 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        ]), 'std_fit_time': array([0.00181783, 0.04317418, 0.04928994, 0.00029993, 0.04978706,
       0.04614501, 0.00030474, 0.000872  , 0.09058883, 0.0003986 ,
       0.00070016, 0.10175097]), 'split0_test_score': array([0.95945946, 0.95945946, 0.95945946, 0.95945946, 0.95945946,
       0.95945946, 0.95945946, 0.95945946, 0.97297297, 0.95945946,
       0.95945946, 0.97297297]), 'split1_train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'split6_test_score': array([0.98611111, 0.98611111, 0.98611111, 0.98611111, 0.98611111,
       0.98611111, 0.98611111, 0.98611111, 0.98611111, 0.98611111,
       0.98611111, 0.98611111]), 'split3_test_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'split6_train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'split2_train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'mean_test_score': array([0.99313187, 0.99313187, 0.99313187, 0.99313187, 0.99313187,
       0.99313187, 0.99313187, 0.99313187, 0.99450549, 0.99313187,
       0.99313187, 0.99450549]), 'split7_train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'split4_test_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'split9_train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'split9_test_score': array([0.98611111, 0.98611111, 0.98611111, 0.98611111, 0.98611111,
       0.98611111, 0.98611111, 0.98611111, 0.98611111, 0.98611111,
       0.98611111, 0.98611111]), 'mean_train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'split5_train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'split8_test_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'split5_test_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'std_test_score': array([0.0125717 , 0.0125717 , 0.0125717 , 0.0125717 , 0.0125717 ,
       0.0125717 , 0.0125717 , 0.0125717 , 0.00906735, 0.0125717 ,
       0.0125717 , 0.00906735]), 'split2_test_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'std_score_time': array([0.00030169, 0.00114047, 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        ])}
LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=5000, multi_class='auto', n_jobs=5,
          penalty='l2', random_state=0, solver='sag', tol=0.0001,
          verbose=0, warm_start=False)
Stop grid search 2019-01-05 01:15:37.366569
Elapsed grid search time 0:00:20.466747
Start learning with best params at 2019-01-05 01:15:37.366569
Stop learning 2019-01-05 01:15:45.760344
Elapsed learning time 0:00:08.393775
0.9934065934065934
Classification report for classifier LogisticRegression(C=1, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=5000, multi_class='auto', n_jobs=5,
          penalty='l2', random_state=0, solver='sag', tol=0.0001,
          verbose=0, warm_start=False):
              precision    recall  f1-score   support

          -1       0.99      0.99      0.99       529
           1       0.99      0.99      0.99       381

   micro avg       0.99      0.99      0.99       910
   macro avg       0.99      0.99      0.99       910
weighted avg       0.99      0.99      0.99       910


Confusion matrix:
[[526   3]
 [  3 378]]
Accuracy=0.9934065934065934
