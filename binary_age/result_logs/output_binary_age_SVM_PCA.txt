X_train of shape: (3636, 250)
y_train of shape: (3636,)
X_test of shape: (910, 250)
y_test of shape: (910,)
X_train of shape: (2908, 250)
y_train of shape: (2908,)
X_val of shape: (728, 250)
y_val of shape: (728,)
X_test of shape: (910, 250)
y_test of shape: (910,)
Start grid search at 2019-01-05 00:04:56.945436
{'params': [{'gamma': 0.004, 'kernel': 'rbf', 'C': 0.01}, {'gamma': 0.004, 'kernel': 'linear', 'C': 0.01}, {'gamma': 0.004, 'kernel': 'poly', 'C': 0.01}, {'gamma': 0.001, 'kernel': 'rbf', 'C': 0.01}, {'gamma': 0.001, 'kernel': 'linear', 'C': 0.01}, {'gamma': 0.001, 'kernel': 'poly', 'C': 0.01}, {'gamma': 0.01, 'kernel': 'rbf', 'C': 0.01}, {'gamma': 0.01, 'kernel': 'linear', 'C': 0.01}, {'gamma': 0.01, 'kernel': 'poly', 'C': 0.01}, {'gamma': 0.1, 'kernel': 'rbf', 'C': 0.01}, {'gamma': 0.1, 'kernel': 'linear', 'C': 0.01}, {'gamma': 0.1, 'kernel': 'poly', 'C': 0.01}, {'gamma': 0.004, 'kernel': 'rbf', 'C': 0.1}, {'gamma': 0.004, 'kernel': 'linear', 'C': 0.1}, {'gamma': 0.004, 'kernel': 'poly', 'C': 0.1}, {'gamma': 0.001, 'kernel': 'rbf', 'C': 0.1}, {'gamma': 0.001, 'kernel': 'linear', 'C': 0.1}, {'gamma': 0.001, 'kernel': 'poly', 'C': 0.1}, {'gamma': 0.01, 'kernel': 'rbf', 'C': 0.1}, {'gamma': 0.01, 'kernel': 'linear', 'C': 0.1}, {'gamma': 0.01, 'kernel': 'poly', 'C': 0.1}, {'gamma': 0.1, 'kernel': 'rbf', 'C': 0.1}, {'gamma': 0.1, 'kernel': 'linear', 'C': 0.1}, {'gamma': 0.1, 'kernel': 'poly', 'C': 0.1}, {'gamma': 0.004, 'kernel': 'rbf', 'C': 1}, {'gamma': 0.004, 'kernel': 'linear', 'C': 1}, {'gamma': 0.004, 'kernel': 'poly', 'C': 1}, {'gamma': 0.001, 'kernel': 'rbf', 'C': 1}, {'gamma': 0.001, 'kernel': 'linear', 'C': 1}, {'gamma': 0.001, 'kernel': 'poly', 'C': 1}, {'gamma': 0.01, 'kernel': 'rbf', 'C': 1}, {'gamma': 0.01, 'kernel': 'linear', 'C': 1}, {'gamma': 0.01, 'kernel': 'poly', 'C': 1}, {'gamma': 0.1, 'kernel': 'rbf', 'C': 1}, {'gamma': 0.1, 'kernel': 'linear', 'C': 1}, {'gamma': 0.1, 'kernel': 'poly', 'C': 1}, {'gamma': 0.004, 'kernel': 'rbf', 'C': 10}, {'gamma': 0.004, 'kernel': 'linear', 'C': 10}, {'gamma': 0.004, 'kernel': 'poly', 'C': 10}, {'gamma': 0.001, 'kernel': 'rbf', 'C': 10}, {'gamma': 0.001, 'kernel': 'linear', 'C': 10}, {'gamma': 0.001, 'kernel': 'poly', 'C': 10}, {'gamma': 0.01, 'kernel': 'rbf', 'C': 10}, {'gamma': 0.01, 'kernel': 'linear', 'C': 10}, {'gamma': 0.01, 'kernel': 'poly', 'C': 10}, {'gamma': 0.1, 'kernel': 'rbf', 'C': 10}, {'gamma': 0.1, 'kernel': 'linear', 'C': 10}, {'gamma': 0.1, 'kernel': 'poly', 'C': 10}], 'split1_train_score': array([0.78899083, 1.        , 1.        , 0.78899083, 1.        ,
       1.        , 0.78899083, 1.        , 1.        , 0.78899083,
       1.        , 1.        , 0.78899083, 1.        , 1.        ,
       0.78899083, 1.        , 1.        , 0.78899083, 1.        ,
       1.        , 0.78899083, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'split6_train_score': array([0.78810976, 1.        , 1.        , 0.78810976, 1.        ,
       1.        , 0.78810976, 1.        , 1.        , 0.78810976,
       1.        , 1.        , 0.78810976, 1.        , 1.        ,
       0.78810976, 1.        , 1.        , 0.78810976, 1.        ,
       1.        , 0.78810976, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'rank_test_score': array([17, 33,  1, 17, 33,  1, 17, 33,  1, 17, 33,  1, 17, 33,  1, 17, 33,
        1, 17, 33,  1, 17, 33,  1, 17, 33,  1, 17, 33,  1, 17, 33,  1, 17,
       33,  1, 17, 33,  1, 17, 33,  1, 17, 33,  1, 17, 33,  1]), 'split4_test_score': array([0.79166667, 0.81944444, 0.88888889, 0.79166667, 0.81944444,
       0.88888889, 0.79166667, 0.81944444, 0.88888889, 0.79166667,
       0.81944444, 0.88888889, 0.79166667, 0.81944444, 0.88888889,
       0.79166667, 0.81944444, 0.88888889, 0.79166667, 0.81944444,
       0.88888889, 0.79166667, 0.81944444, 0.88888889, 0.79166667,
       0.81944444, 0.88888889, 0.79166667, 0.81944444, 0.88888889,
       0.79166667, 0.81944444, 0.88888889, 0.79166667, 0.81944444,
       0.88888889, 0.79166667, 0.81944444, 0.88888889, 0.79166667,
       0.81944444, 0.88888889, 0.79166667, 0.81944444, 0.88888889,
       0.79166667, 0.81944444, 0.88888889]), 'split8_test_score': array([0.79166667, 0.79166667, 0.81944444, 0.79166667, 0.79166667,
       0.81944444, 0.79166667, 0.79166667, 0.81944444, 0.79166667,
       0.79166667, 0.81944444, 0.79166667, 0.79166667, 0.81944444,
       0.79166667, 0.79166667, 0.81944444, 0.79166667, 0.79166667,
       0.81944444, 0.79166667, 0.79166667, 0.81944444, 0.79166667,
       0.79166667, 0.81944444, 0.79166667, 0.79166667, 0.81944444,
       0.79166667, 0.79166667, 0.81944444, 0.79166667, 0.79166667,
       0.81944444, 0.79166667, 0.79166667, 0.81944444, 0.79166667,
       0.79166667, 0.81944444, 0.79166667, 0.79166667, 0.81944444,
       0.79166667, 0.79166667, 0.81944444]), 'split9_train_score': array([0.78810976, 1.        , 1.        , 0.78810976, 1.        ,
       1.        , 0.78810976, 1.        , 1.        , 0.78810976,
       1.        , 1.        , 0.78810976, 1.        , 1.        ,
       0.78810976, 1.        , 1.        , 0.78810976, 1.        ,
       1.        , 0.78810976, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'split0_train_score': array([0.78899083, 1.        , 1.        , 0.78899083, 1.        ,
       1.        , 0.78899083, 1.        , 1.        , 0.78899083,
       1.        , 1.        , 0.78899083, 1.        , 1.        ,
       0.78899083, 1.        , 1.        , 0.78899083, 1.        ,
       1.        , 0.78899083, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'std_train_score': array([0.00043163, 0.        , 0.        , 0.00043163, 0.        ,
       0.        , 0.00043163, 0.        , 0.        , 0.00043163,
       0.        , 0.        , 0.00043163, 0.        , 0.        ,
       0.00043163, 0.        , 0.        , 0.00043163, 0.        ,
       0.        , 0.00043163, 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        ]), 'mean_score_time': array([0.01231022, 0.00299561, 0.00579832, 0.01020582, 0.00279865,
       0.00580142, 0.01140709, 0.00289881, 0.00579777, 0.01260443,
       0.00290098, 0.00580335, 0.01220205, 0.003001  , 0.00569968,
       0.01090612, 0.00290091, 0.00560298, 0.01209822, 0.00290411,
       0.00579648, 0.01210818, 0.00280135, 0.00610347, 0.01170871,
       0.00300245, 0.00560038, 0.01030786, 0.00280089, 0.00550456,
       0.01150289, 0.00270255, 0.00570679, 0.01160104, 0.00289907,
       0.00560303, 0.01099937, 0.00290067, 0.00579996, 0.01060131,
       0.00279884, 0.0057014 , 0.0123101 , 0.00290093, 0.0057029 ,
       0.01180105, 0.00300062, 0.00590153]), 'split9_test_score': array([0.79166667, 0.73611111, 0.90277778, 0.79166667, 0.73611111,
       0.90277778, 0.79166667, 0.73611111, 0.90277778, 0.79166667,
       0.73611111, 0.90277778, 0.79166667, 0.73611111, 0.90277778,
       0.79166667, 0.73611111, 0.90277778, 0.79166667, 0.73611111,
       0.90277778, 0.79166667, 0.73611111, 0.90277778, 0.79166667,
       0.73611111, 0.90277778, 0.79166667, 0.73611111, 0.90277778,
       0.79166667, 0.73611111, 0.90277778, 0.79166667, 0.73611111,
       0.90277778, 0.79166667, 0.73611111, 0.90277778, 0.79166667,
       0.73611111, 0.90277778, 0.79166667, 0.73611111, 0.90277778,
       0.79166667, 0.73611111, 0.90277778]), 'split7_test_score': array([0.79166667, 0.81944444, 0.79166667, 0.79166667, 0.81944444,
       0.79166667, 0.79166667, 0.81944444, 0.79166667, 0.79166667,
       0.81944444, 0.79166667, 0.79166667, 0.81944444, 0.79166667,
       0.79166667, 0.81944444, 0.79166667, 0.79166667, 0.81944444,
       0.79166667, 0.79166667, 0.81944444, 0.79166667, 0.79166667,
       0.81944444, 0.79166667, 0.79166667, 0.81944444, 0.79166667,
       0.79166667, 0.81944444, 0.79166667, 0.79166667, 0.81944444,
       0.79166667, 0.79166667, 0.81944444, 0.79166667, 0.79166667,
       0.81944444, 0.79166667, 0.79166667, 0.81944444, 0.79166667,
       0.79166667, 0.81944444, 0.79166667]), 'mean_test_score': array([0.78846154, 0.77472527, 0.83791209, 0.78846154, 0.77472527,
       0.83791209, 0.78846154, 0.77472527, 0.83791209, 0.78846154,
       0.77472527, 0.83791209, 0.78846154, 0.77472527, 0.83791209,
       0.78846154, 0.77472527, 0.83791209, 0.78846154, 0.77472527,
       0.83791209, 0.78846154, 0.77472527, 0.83791209, 0.78846154,
       0.77472527, 0.83791209, 0.78846154, 0.77472527, 0.83791209,
       0.78846154, 0.77472527, 0.83791209, 0.78846154, 0.77472527,
       0.83791209, 0.78846154, 0.77472527, 0.83791209, 0.78846154,
       0.77472527, 0.83791209, 0.78846154, 0.77472527, 0.83791209,
       0.78846154, 0.77472527, 0.83791209]), 'param_kernel': masked_array(data=['rbf', 'linear', 'poly', 'rbf', 'linear', 'poly',
                   'rbf', 'linear', 'poly', 'rbf', 'linear', 'poly',
                   'rbf', 'linear', 'poly', 'rbf', 'linear', 'poly',
                   'rbf', 'linear', 'poly', 'rbf', 'linear', 'poly',
                   'rbf', 'linear', 'poly', 'rbf', 'linear', 'poly',
                   'rbf', 'linear', 'poly', 'rbf', 'linear', 'poly',
                   'rbf', 'linear', 'poly', 'rbf', 'linear', 'poly',
                   'rbf', 'linear', 'poly', 'rbf', 'linear', 'poly'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'split6_test_score': array([0.79166667, 0.73611111, 0.84722222, 0.79166667, 0.73611111,
       0.84722222, 0.79166667, 0.73611111, 0.84722222, 0.79166667,
       0.73611111, 0.84722222, 0.79166667, 0.73611111, 0.84722222,
       0.79166667, 0.73611111, 0.84722222, 0.79166667, 0.73611111,
       0.84722222, 0.79166667, 0.73611111, 0.84722222, 0.79166667,
       0.73611111, 0.84722222, 0.79166667, 0.73611111, 0.84722222,
       0.79166667, 0.73611111, 0.84722222, 0.79166667, 0.73611111,
       0.84722222, 0.79166667, 0.73611111, 0.84722222, 0.79166667,
       0.73611111, 0.84722222, 0.79166667, 0.73611111, 0.84722222,
       0.79166667, 0.73611111, 0.84722222]), 'split4_train_score': array([0.78810976, 1.        , 1.        , 0.78810976, 1.        ,
       1.        , 0.78810976, 1.        , 1.        , 0.78810976,
       1.        , 1.        , 0.78810976, 1.        , 1.        ,
       0.78810976, 1.        , 1.        , 0.78810976, 1.        ,
       1.        , 0.78810976, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'param_gamma': masked_array(data=[0.004, 0.004, 0.004, 0.001, 0.001, 0.001, 0.01, 0.01,
                   0.01, 0.1, 0.1, 0.1, 0.004, 0.004, 0.004, 0.001, 0.001,
                   0.001, 0.01, 0.01, 0.01, 0.1, 0.1, 0.1, 0.004, 0.004,
                   0.004, 0.001, 0.001, 0.001, 0.01, 0.01, 0.01, 0.1, 0.1,
                   0.1, 0.004, 0.004, 0.004, 0.001, 0.001, 0.001, 0.01,
                   0.01, 0.01, 0.1, 0.1, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'split2_train_score': array([0.78899083, 1.        , 1.        , 0.78899083, 1.        ,
       1.        , 0.78899083, 1.        , 1.        , 0.78899083,
       1.        , 1.        , 0.78899083, 1.        , 1.        ,
       0.78899083, 1.        , 1.        , 0.78899083, 1.        ,
       1.        , 0.78899083, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'split3_test_score': array([0.78378378, 0.77027027, 0.7972973 , 0.78378378, 0.77027027,
       0.7972973 , 0.78378378, 0.77027027, 0.7972973 , 0.78378378,
       0.77027027, 0.7972973 , 0.78378378, 0.77027027, 0.7972973 ,
       0.78378378, 0.77027027, 0.7972973 , 0.78378378, 0.77027027,
       0.7972973 , 0.78378378, 0.77027027, 0.7972973 , 0.78378378,
       0.77027027, 0.7972973 , 0.78378378, 0.77027027, 0.7972973 ,
       0.78378378, 0.77027027, 0.7972973 , 0.78378378, 0.77027027,
       0.7972973 , 0.78378378, 0.77027027, 0.7972973 , 0.78378378,
       0.77027027, 0.7972973 , 0.78378378, 0.77027027, 0.7972973 ,
       0.78378378, 0.77027027, 0.7972973 ]), 'mean_train_score': array([0.78846218, 1.        , 1.        , 0.78846218, 1.        ,
       1.        , 0.78846218, 1.        , 1.        , 0.78846218,
       1.        , 1.        , 0.78846218, 1.        , 1.        ,
       0.78846218, 1.        , 1.        , 0.78846218, 1.        ,
       1.        , 0.78846218, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'split8_train_score': array([0.78810976, 1.        , 1.        , 0.78810976, 1.        ,
       1.        , 0.78810976, 1.        , 1.        , 0.78810976,
       1.        , 1.        , 0.78810976, 1.        , 1.        ,
       0.78810976, 1.        , 1.        , 0.78810976, 1.        ,
       1.        , 0.78810976, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'split1_test_score': array([0.78378378, 0.78378378, 0.85135135, 0.78378378, 0.78378378,
       0.85135135, 0.78378378, 0.78378378, 0.85135135, 0.78378378,
       0.78378378, 0.85135135, 0.78378378, 0.78378378, 0.85135135,
       0.78378378, 0.78378378, 0.85135135, 0.78378378, 0.78378378,
       0.85135135, 0.78378378, 0.78378378, 0.85135135, 0.78378378,
       0.78378378, 0.85135135, 0.78378378, 0.78378378, 0.85135135,
       0.78378378, 0.78378378, 0.85135135, 0.78378378, 0.78378378,
       0.85135135, 0.78378378, 0.78378378, 0.85135135, 0.78378378,
       0.78378378, 0.85135135, 0.78378378, 0.78378378, 0.85135135,
       0.78378378, 0.78378378, 0.85135135]), 'split5_train_score': array([0.78810976, 1.        , 1.        , 0.78810976, 1.        ,
       1.        , 0.78810976, 1.        , 1.        , 0.78810976,
       1.        , 1.        , 0.78810976, 1.        , 1.        ,
       0.78810976, 1.        , 1.        , 0.78810976, 1.        ,
       1.        , 0.78810976, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'split3_train_score': array([0.78899083, 1.        , 1.        , 0.78899083, 1.        ,
       1.        , 0.78899083, 1.        , 1.        , 0.78899083,
       1.        , 1.        , 0.78899083, 1.        , 1.        ,
       0.78899083, 1.        , 1.        , 0.78899083, 1.        ,
       1.        , 0.78899083, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'std_score_time': array([1.26798753e-03, 4.51405461e-04, 3.98561600e-04, 7.52354327e-04,
       4.03830053e-04, 4.00114518e-04, 1.20232831e-03, 2.99456606e-04,
       6.01495036e-04, 1.11747800e-03, 3.05668132e-04, 7.49177022e-04,
       9.76570937e-04, 1.05290622e-05, 6.45059245e-04, 1.37892269e-03,
       3.00373557e-04, 4.91582123e-04, 1.03866327e-03, 3.01259325e-04,
       6.01360974e-04, 1.51630542e-03, 6.00036882e-04, 2.99520390e-04,
       1.00505223e-03, 4.39965798e-04, 4.89221110e-04, 9.02268488e-04,
       4.00289484e-04, 5.03475743e-04, 1.28247404e-03, 4.59657764e-04,
       4.58112015e-04, 7.97175928e-04, 5.41519749e-04, 4.95160558e-04,
       8.92362274e-04, 3.00034129e-04, 5.97294500e-04, 1.02436628e-03,
       3.99232047e-04, 4.54633876e-04, 8.97818786e-04, 3.00042487e-04,
       4.55835125e-04, 8.73514513e-04, 4.47508272e-04, 3.00153799e-04]), 'split7_train_score': array([0.78810976, 1.        , 1.        , 0.78810976, 1.        ,
       1.        , 0.78810976, 1.        , 1.        , 0.78810976,
       1.        , 1.        , 0.78810976, 1.        , 1.        ,
       0.78810976, 1.        , 1.        , 0.78810976, 1.        ,
       1.        , 0.78810976, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'std_test_score': array([0.00387205, 0.02985286, 0.03394994, 0.00387205, 0.02985286,
       0.03394994, 0.00387205, 0.02985286, 0.03394994, 0.00387205,
       0.02985286, 0.03394994, 0.00387205, 0.02985286, 0.03394994,
       0.00387205, 0.02985286, 0.03394994, 0.00387205, 0.02985286,
       0.03394994, 0.00387205, 0.02985286, 0.03394994, 0.00387205,
       0.02985286, 0.03394994, 0.00387205, 0.02985286, 0.03394994,
       0.00387205, 0.02985286, 0.03394994, 0.00387205, 0.02985286,
       0.03394994, 0.00387205, 0.02985286, 0.03394994, 0.00387205,
       0.02985286, 0.03394994, 0.00387205, 0.02985286, 0.03394994,
       0.00387205, 0.02985286, 0.03394994]), 'std_fit_time': array([0.00284551, 0.03540254, 0.0018506 , 0.00161442, 0.02899221,
       0.0026388 , 0.00222862, 0.03021307, 0.00238802, 0.00221228,
       0.02773402, 0.00171901, 0.00265515, 0.03183118, 0.00343021,
       0.00162865, 0.02990906, 0.00224181, 0.0030566 , 0.03547461,
       0.00257107, 0.00415078, 0.03429807, 0.00249093, 0.00295094,
       0.0277357 , 0.00292518, 0.00196178, 0.02671334, 0.0033431 ,
       0.00276274, 0.02628072, 0.00214192, 0.0043888 , 0.02689727,
       0.00186956, 0.00200592, 0.02623366, 0.00209331, 0.00328778,
       0.02850386, 0.00168215, 0.0026845 , 0.02990257, 0.00260989,
       0.00436443, 0.03025796, 0.00288906]), 'mean_fit_time': array([0.10692415, 0.14924841, 0.0787297 , 0.09603031, 0.14034133,
       0.0792243 , 0.1072284 , 0.13863754, 0.07992623, 0.10713134,
       0.13833754, 0.07882187, 0.10763063, 0.14074264, 0.07922802,
       0.09862576, 0.13754027, 0.0793222 , 0.10993633, 0.14423888,
       0.08032765, 0.10973144, 0.14184268, 0.07902691, 0.11093376,
       0.14224186, 0.07882295, 0.101528  , 0.14464226, 0.08002369,
       0.11163754, 0.14244099, 0.07902551, 0.11053414, 0.14224157,
       0.08012404, 0.11063199, 0.14084141, 0.08002932, 0.10173135,
       0.14513898, 0.07842746, 0.11303432, 0.14034283, 0.07931669,
       0.11243248, 0.13734064, 0.08022368]), 'split2_test_score': array([0.78378378, 0.74324324, 0.82432432, 0.78378378, 0.74324324,
       0.82432432, 0.78378378, 0.74324324, 0.82432432, 0.78378378,
       0.74324324, 0.82432432, 0.78378378, 0.74324324, 0.82432432,
       0.78378378, 0.74324324, 0.82432432, 0.78378378, 0.74324324,
       0.82432432, 0.78378378, 0.74324324, 0.82432432, 0.78378378,
       0.74324324, 0.82432432, 0.78378378, 0.74324324, 0.82432432,
       0.78378378, 0.74324324, 0.82432432, 0.78378378, 0.74324324,
       0.82432432, 0.78378378, 0.74324324, 0.82432432, 0.78378378,
       0.74324324, 0.82432432, 0.78378378, 0.74324324, 0.82432432,
       0.78378378, 0.74324324, 0.82432432]), 'split0_test_score': array([0.78378378, 0.75675676, 0.82432432, 0.78378378, 0.75675676,
       0.82432432, 0.78378378, 0.75675676, 0.82432432, 0.78378378,
       0.75675676, 0.82432432, 0.78378378, 0.75675676, 0.82432432,
       0.78378378, 0.75675676, 0.82432432, 0.78378378, 0.75675676,
       0.82432432, 0.78378378, 0.75675676, 0.82432432, 0.78378378,
       0.75675676, 0.82432432, 0.78378378, 0.75675676, 0.82432432,
       0.78378378, 0.75675676, 0.82432432, 0.78378378, 0.75675676,
       0.82432432, 0.78378378, 0.75675676, 0.82432432, 0.78378378,
       0.75675676, 0.82432432, 0.78378378, 0.75675676, 0.82432432,
       0.78378378, 0.75675676, 0.82432432]), 'param_C': masked_array(data=[0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.01, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
                   0.1, 0.1, 0.1, 0.1, 0.1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                   1, 1, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'split5_test_score': array([0.79166667, 0.79166667, 0.83333333, 0.79166667, 0.79166667,
       0.83333333, 0.79166667, 0.79166667, 0.83333333, 0.79166667,
       0.79166667, 0.83333333, 0.79166667, 0.79166667, 0.83333333,
       0.79166667, 0.79166667, 0.83333333, 0.79166667, 0.79166667,
       0.83333333, 0.79166667, 0.79166667, 0.83333333, 0.79166667,
       0.79166667, 0.83333333, 0.79166667, 0.79166667, 0.83333333,
       0.79166667, 0.79166667, 0.83333333, 0.79166667, 0.79166667,
       0.83333333, 0.79166667, 0.79166667, 0.83333333, 0.79166667,
       0.79166667, 0.83333333, 0.79166667, 0.79166667, 0.83333333,
       0.79166667, 0.79166667, 0.83333333])}
SVC(C=0.01, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.004, kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)
Stop grid search 2019-01-05 00:05:18.860189
Elapsed grid search time 0:00:21.914753
Start learning with best params at 2019-01-05 00:05:18.860189
Stop learning 2019-01-05 00:05:19.681390
Elapsed learning time 0:00:00.821201
Printing Test labels
[ 1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1  1 -1  1  1  1 -1  1  1  1
  1  1  1  1 -1 -1  1  1  1 -1  1  1 -1  1  1  1  1  1  1  1  1 -1  1  1
  1  1 -1  1  1  1  1 -1 -1 -1  1 -1 -1  1  1  1  1  1  1  1  1  1  1 -1
 -1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1 -1 -1  1  1  1  1  1  1
  1  1 -1  1  1  1  1 -1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1 -1  1
 -1  1  1 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1 -1 -1
 -1  1 -1 -1 -1 -1 -1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1
  1 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1
  1 -1  1 -1  1  1  1  1  1 -1  1  1 -1  1  1  1  1  1 -1  1  1  1  1  1
 -1  1  1 -1  1  1 -1  1  1  1  1  1  1  1  1 -1 -1  1  1  1  1  1  1  1
  1  1  1 -1  1  1  1  1  1 -1  1  1  1  1  1  1  1 -1  1  1  1  1 -1  1
  1  1  1  1  1  1  1  1  1  1  1 -1 -1  1  1  1  1 -1  1 -1  1  1  1  1
  1 -1  1  1  1  1  1  1  1  1  1 -1 -1  1  1  1  1  1  1 -1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1 -1  1  1 -1  1  1 -1 -1 -1  1  1 -1  1  1
 -1  1  1  1  1  1 -1 -1  1  1  1  1  1  1  1  1 -1  1  1  1 -1  1  1 -1
  1  1  1 -1  1 -1  1 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1 -1  1 -1  1 -1  1  1  1  1  1 -1  1  1  1  1  1 -1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1 -1  1  1
  1 -1 -1  1  1  1  1  1  1  1  1  1  1 -1 -1  1  1 -1  1 -1  1  1  1  1
  1  1 -1  1  1  1  1  1  1  1 -1  1 -1  1  1  1  1 -1  1  1  1  1 -1  1
  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1 -1  1  1  1
 -1  1 -1  1 -1 -1  1 -1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1
  1  1  1 -1  1  1  1  1 -1  1  1  1  1  1  1 -1  1  1  1  1 -1  1  1  1
 -1  1 -1  1 -1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1 -1 -1
  1 -1  1 -1  1  1  1 -1  1  1  1  1  1  1  1 -1  1  1 -1 -1  1  1  1  1
  1  1  1  1  1 -1 -1  1 -1  1  1  1  1  1  1  1  1 -1  1 -1  1  1  1  1
  1  1 -1 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1 -1  1
  1 -1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1 -1  1  1  1  1  1
 -1  1 -1  1  1 -1  1  1  1  1  1  1  1 -1 -1  1  1  1  1  1  1 -1  1  1
 -1  1  1  1  1  1 -1  1 -1  1 -1  1 -1 -1  1 -1  1  1  1 -1  1  1  1  1
  1  1  1  1  1 -1 -1 -1  1  1  1 -1  1 -1  1  1  1  1  1 -1  1  1  1 -1
  1 -1 -1  1  1  1  1 -1  1  1  1  1  1  1 -1  1 -1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1 -1  1  1  1
  1 -1  1  1  1  1  1  1  1 -1  1  1  1 -1  1  1 -1 -1  1  1  1  1  1 -1
  1  1 -1  1  1  1  1 -1 -1  1  1  1  1  1 -1  1  1  1 -1  1 -1  1 -1  1
 -1  1  1  1  1  1  1 -1 -1  1  1  1  1 -1 -1 -1  1  1 -1  1 -1  1  1  1
  1  1  1  1  1 -1  1  1  1  1  1  1 -1  1  1 -1 -1 -1  1  1  1  1  1  1
  1 -1  1  1  1  1  1 -1  1  1  1  1  1  1 -1 -1  1  1  1 -1  1  1]
<class 'numpy.ndarray'>
Printing our predictions
[ 1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1
  1  1  1  1  1  1  1  1 -1 -1  1  1 -1  1  1  1  1  1 -1  1  1 -1  1  1
  1  1 -1  1  1  1  1 -1 -1 -1  1 -1  1  1  1  1  1  1  1  1  1  1  1 -1
 -1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1 -1 -1  1  1  1  1  1  1
  1  1 -1  1  1  1  1  1 -1  1  1  1  1 -1  1  1  1  1  1  1 -1  1 -1  1
 -1  1  1 -1  1  1  1  1  1 -1 -1  1  1  1  1  1  1  1  1 -1 -1  1 -1 -1
 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1 -1  1  1  1  1  1  1  1  1 -1 -1  1  1  1 -1 -1  1  1  1  1 -1
 -1  1  1 -1  1  1 -1  1  1  1  1  1  1  1  1  1 -1  1  1 -1  1  1  1  1
 -1  1  1 -1  1  1  1  1  1 -1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1
  1 -1  1 -1 -1  1  1  1  1  1 -1 -1 -1  1  1  1  1 -1  1 -1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1 -1 -1  1  1  1 -1  1  1
 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1 -1  1 -1  1  1 -1
  1  1  1 -1  1  1  1 -1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1
  1 -1  1 -1  1 -1  1  1  1 -1  1 -1 -1  1  1  1  1  1  1  1  1  1  1  1
 -1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1 -1  1  1
  1 -1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1 -1  1  1  1 -1
 -1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1 -1 -1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1 -1  1  1  1
 -1  1 -1  1 -1  1 -1  1  1  1  1  1  1  1  1  1 -1 -1  1  1  1  1  1 -1
  1  1  1 -1  1  1 -1  1 -1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1 -1
  1  1 -1  1 -1 -1  1  1 -1  1  1  1  1  1 -1  1  1 -1  1  1  1  1 -1  1
  1  1  1 -1 -1  1  1 -1  1  1  1  1  1  1  1 -1  1  1 -1 -1  1  1  1  1
  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1
  1  1 -1  1  1 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1
  1 -1  1 -1 -1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1  1 -1
 -1  1  1  1  1 -1  1  1  1 -1 -1  1  1 -1 -1  1  1  1  1  1  1 -1  1  1
 -1  1  1  1  1  1 -1  1 -1  1  1  1 -1  1  1 -1  1  1  1 -1  1  1  1  1
  1  1 -1  1  1 -1  1  1  1  1  1 -1  1 -1  1  1  1  1  1 -1  1  1 -1 -1
 -1 -1 -1  1  1 -1  1  1  1  1  1  1  1  1  1  1 -1 -1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1 -1  1 -1  1  1  1
  1 -1  1  1  1  1  1  1  1 -1  1  1  1 -1  1  1  1  1 -1  1  1  1  1  1
  1 -1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1  1  1 -1  1
  1  1  1  1 -1  1 -1 -1 -1  1  1  1 -1 -1  1 -1  1  1 -1  1 -1  1  1  1
  1 -1  1 -1 -1 -1  1  1  1  1  1  1  1  1  1 -1  1 -1  1  1  1  1  1  1
  1 -1  1  1  1  1  1 -1  1  1  1  1  1  1  1 -1  1  1  1 -1 -1  1]
<class 'numpy.ndarray'>
0.865934065934066
Classification report for classifier SVC(C=0.01, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.004, kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False):
              precision    recall  f1-score   support

          -1       0.68      0.65      0.66       187
           1       0.91      0.92      0.92       723

   micro avg       0.87      0.87      0.87       910
   macro avg       0.80      0.78      0.79       910
weighted avg       0.86      0.87      0.86       910


Confusion matrix:
[[121  66]
 [ 56 667]]
Accuracy=0.865934065934066
