X_train of shape: (3636, 250)
y_train of shape: (3636,)
X_test of shape: (910, 250)
y_test of shape: (910,)
X_train of shape: (2908, 250)
y_train of shape: (2908,)
X_val of shape: (728, 250)
y_val of shape: (728,)
X_test of shape: (910, 250)
y_test of shape: (910,)
Start grid search at 2019-01-04 23:47:44.310783
{'params': [{'C': 0.01, 'gamma': 0.004, 'kernel': 'rbf'}, {'C': 0.01, 'gamma': 0.004, 'kernel': 'linear'}, {'C': 0.01, 'gamma': 0.004, 'kernel': 'poly'}, {'C': 0.01, 'gamma': 0.001, 'kernel': 'rbf'}, {'C': 0.01, 'gamma': 0.001, 'kernel': 'linear'}, {'C': 0.01, 'gamma': 0.001, 'kernel': 'poly'}, {'C': 0.01, 'gamma': 0.01, 'kernel': 'rbf'}, {'C': 0.01, 'gamma': 0.01, 'kernel': 'linear'}, {'C': 0.01, 'gamma': 0.01, 'kernel': 'poly'}, {'C': 0.01, 'gamma': 0.1, 'kernel': 'rbf'}, {'C': 0.01, 'gamma': 0.1, 'kernel': 'linear'}, {'C': 0.01, 'gamma': 0.1, 'kernel': 'poly'}, {'C': 0.1, 'gamma': 0.004, 'kernel': 'rbf'}, {'C': 0.1, 'gamma': 0.004, 'kernel': 'linear'}, {'C': 0.1, 'gamma': 0.004, 'kernel': 'poly'}, {'C': 0.1, 'gamma': 0.001, 'kernel': 'rbf'}, {'C': 0.1, 'gamma': 0.001, 'kernel': 'linear'}, {'C': 0.1, 'gamma': 0.001, 'kernel': 'poly'}, {'C': 0.1, 'gamma': 0.01, 'kernel': 'rbf'}, {'C': 0.1, 'gamma': 0.01, 'kernel': 'linear'}, {'C': 0.1, 'gamma': 0.01, 'kernel': 'poly'}, {'C': 0.1, 'gamma': 0.1, 'kernel': 'rbf'}, {'C': 0.1, 'gamma': 0.1, 'kernel': 'linear'}, {'C': 0.1, 'gamma': 0.1, 'kernel': 'poly'}, {'C': 1, 'gamma': 0.004, 'kernel': 'rbf'}, {'C': 1, 'gamma': 0.004, 'kernel': 'linear'}, {'C': 1, 'gamma': 0.004, 'kernel': 'poly'}, {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}, {'C': 1, 'gamma': 0.001, 'kernel': 'linear'}, {'C': 1, 'gamma': 0.001, 'kernel': 'poly'}, {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}, {'C': 1, 'gamma': 0.01, 'kernel': 'linear'}, {'C': 1, 'gamma': 0.01, 'kernel': 'poly'}, {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}, {'C': 1, 'gamma': 0.1, 'kernel': 'linear'}, {'C': 1, 'gamma': 0.1, 'kernel': 'poly'}, {'C': 10, 'gamma': 0.004, 'kernel': 'rbf'}, {'C': 10, 'gamma': 0.004, 'kernel': 'linear'}, {'C': 10, 'gamma': 0.004, 'kernel': 'poly'}, {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}, {'C': 10, 'gamma': 0.001, 'kernel': 'linear'}, {'C': 10, 'gamma': 0.001, 'kernel': 'poly'}, {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}, {'C': 10, 'gamma': 0.01, 'kernel': 'linear'}, {'C': 10, 'gamma': 0.01, 'kernel': 'poly'}, {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}, {'C': 10, 'gamma': 0.1, 'kernel': 'linear'}, {'C': 10, 'gamma': 0.1, 'kernel': 'poly'}], 'split2_test_score': array([0.68918919, 0.74324324, 0.83783784, 0.68918919, 0.74324324,
       0.83783784, 0.68918919, 0.74324324, 0.83783784, 0.68918919,
       0.74324324, 0.83783784, 0.68918919, 0.74324324, 0.83783784,
       0.68918919, 0.74324324, 0.83783784, 0.68918919, 0.74324324,
       0.83783784, 0.68918919, 0.74324324, 0.83783784, 0.68918919,
       0.74324324, 0.83783784, 0.68918919, 0.74324324, 0.83783784,
       0.68918919, 0.74324324, 0.83783784, 0.68918919, 0.74324324,
       0.83783784, 0.68918919, 0.74324324, 0.83783784, 0.68918919,
       0.74324324, 0.83783784, 0.68918919, 0.74324324, 0.83783784,
       0.68918919, 0.74324324, 0.83783784]), 'split1_train_score': array([0.69266055, 1.        , 1.        , 0.69266055, 1.        ,
       1.        , 0.69266055, 1.        , 1.        , 0.69266055,
       1.        , 1.        , 0.69266055, 1.        , 1.        ,
       0.69266055, 1.        , 1.        , 0.69266055, 1.        ,
       1.        , 0.69266055, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'split7_test_score': array([0.69444444, 0.79166667, 0.79166667, 0.69444444, 0.79166667,
       0.79166667, 0.69444444, 0.79166667, 0.79166667, 0.69444444,
       0.79166667, 0.79166667, 0.69444444, 0.79166667, 0.79166667,
       0.69444444, 0.79166667, 0.79166667, 0.69444444, 0.79166667,
       0.79166667, 0.69444444, 0.79166667, 0.79166667, 0.69444444,
       0.79166667, 0.79166667, 0.69444444, 0.79166667, 0.79166667,
       0.69444444, 0.79166667, 0.79166667, 0.69444444, 0.79166667,
       0.79166667, 0.69444444, 0.79166667, 0.79166667, 0.69444444,
       0.79166667, 0.79166667, 0.69444444, 0.79166667, 0.79166667,
       0.69444444, 0.79166667, 0.79166667]), 'param_gamma': masked_array(data=[0.004, 0.004, 0.004, 0.001, 0.001, 0.001, 0.01, 0.01,
                   0.01, 0.1, 0.1, 0.1, 0.004, 0.004, 0.004, 0.001, 0.001,
                   0.001, 0.01, 0.01, 0.01, 0.1, 0.1, 0.1, 0.004, 0.004,
                   0.004, 0.001, 0.001, 0.001, 0.01, 0.01, 0.01, 0.1, 0.1,
                   0.1, 0.004, 0.004, 0.004, 0.001, 0.001, 0.001, 0.01,
                   0.01, 0.01, 0.1, 0.1, 0.1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'split6_test_score': array([0.69444444, 0.80555556, 0.83333333, 0.69444444, 0.80555556,
       0.83333333, 0.69444444, 0.80555556, 0.83333333, 0.69444444,
       0.80555556, 0.83333333, 0.69444444, 0.80555556, 0.83333333,
       0.69444444, 0.80555556, 0.83333333, 0.69444444, 0.80555556,
       0.83333333, 0.69444444, 0.80555556, 0.83333333, 0.69444444,
       0.80555556, 0.83333333, 0.69444444, 0.80555556, 0.83333333,
       0.69444444, 0.80555556, 0.83333333, 0.69444444, 0.80555556,
       0.83333333, 0.69444444, 0.80555556, 0.83333333, 0.69444444,
       0.80555556, 0.83333333, 0.69444444, 0.80555556, 0.83333333,
       0.69444444, 0.80555556, 0.83333333]), 'split2_train_score': array([0.69266055, 1.        , 1.        , 0.69266055, 1.        ,
       1.        , 0.69266055, 1.        , 1.        , 0.69266055,
       1.        , 1.        , 0.69266055, 1.        , 1.        ,
       0.69266055, 1.        , 1.        , 0.69266055, 1.        ,
       1.        , 0.69266055, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'split0_train_score': array([0.69266055, 1.        , 1.        , 0.69266055, 1.        ,
       1.        , 0.69266055, 1.        , 1.        , 0.69266055,
       1.        , 1.        , 0.69266055, 1.        , 1.        ,
       0.69266055, 1.        , 1.        , 0.69266055, 1.        ,
       1.        , 0.69266055, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'split5_train_score': array([0.69207317, 1.        , 1.        , 0.69207317, 1.        ,
       1.        , 0.69207317, 1.        , 1.        , 0.69207317,
       1.        , 1.        , 0.69207317, 1.        , 1.        ,
       0.69207317, 1.        , 1.        , 0.69207317, 1.        ,
       1.        , 0.69207317, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'mean_test_score': array([0.69230769, 0.7706044 , 0.80769231, 0.69230769, 0.7706044 ,
       0.80769231, 0.69230769, 0.7706044 , 0.80769231, 0.69230769,
       0.7706044 , 0.80769231, 0.69230769, 0.7706044 , 0.80769231,
       0.69230769, 0.7706044 , 0.80769231, 0.69230769, 0.7706044 ,
       0.80769231, 0.69230769, 0.7706044 , 0.80769231, 0.69230769,
       0.7706044 , 0.80769231, 0.69230769, 0.7706044 , 0.80769231,
       0.69230769, 0.7706044 , 0.80769231, 0.69230769, 0.7706044 ,
       0.80769231, 0.69230769, 0.7706044 , 0.80769231, 0.69230769,
       0.7706044 , 0.80769231, 0.69230769, 0.7706044 , 0.80769231,
       0.69230769, 0.7706044 , 0.80769231]), 'param_C': masked_array(data=[0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.01, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
                   0.1, 0.1, 0.1, 0.1, 0.1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                   1, 1, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'split0_test_score': array([0.68918919, 0.77027027, 0.77027027, 0.68918919, 0.77027027,
       0.77027027, 0.68918919, 0.77027027, 0.77027027, 0.68918919,
       0.77027027, 0.77027027, 0.68918919, 0.77027027, 0.77027027,
       0.68918919, 0.77027027, 0.77027027, 0.68918919, 0.77027027,
       0.77027027, 0.68918919, 0.77027027, 0.77027027, 0.68918919,
       0.77027027, 0.77027027, 0.68918919, 0.77027027, 0.77027027,
       0.68918919, 0.77027027, 0.77027027, 0.68918919, 0.77027027,
       0.77027027, 0.68918919, 0.77027027, 0.77027027, 0.68918919,
       0.77027027, 0.77027027, 0.68918919, 0.77027027, 0.77027027,
       0.68918919, 0.77027027, 0.77027027]), 'split3_test_score': array([0.68918919, 0.82432432, 0.86486486, 0.68918919, 0.82432432,
       0.86486486, 0.68918919, 0.82432432, 0.86486486, 0.68918919,
       0.82432432, 0.86486486, 0.68918919, 0.82432432, 0.86486486,
       0.68918919, 0.82432432, 0.86486486, 0.68918919, 0.82432432,
       0.86486486, 0.68918919, 0.82432432, 0.86486486, 0.68918919,
       0.82432432, 0.86486486, 0.68918919, 0.82432432, 0.86486486,
       0.68918919, 0.82432432, 0.86486486, 0.68918919, 0.82432432,
       0.86486486, 0.68918919, 0.82432432, 0.86486486, 0.68918919,
       0.82432432, 0.86486486, 0.68918919, 0.82432432, 0.86486486,
       0.68918919, 0.82432432, 0.86486486]), 'split1_test_score': array([0.68918919, 0.77027027, 0.81081081, 0.68918919, 0.77027027,
       0.81081081, 0.68918919, 0.77027027, 0.81081081, 0.68918919,
       0.77027027, 0.81081081, 0.68918919, 0.77027027, 0.81081081,
       0.68918919, 0.77027027, 0.81081081, 0.68918919, 0.77027027,
       0.81081081, 0.68918919, 0.77027027, 0.81081081, 0.68918919,
       0.77027027, 0.81081081, 0.68918919, 0.77027027, 0.81081081,
       0.68918919, 0.77027027, 0.81081081, 0.68918919, 0.77027027,
       0.81081081, 0.68918919, 0.77027027, 0.81081081, 0.68918919,
       0.77027027, 0.81081081, 0.68918919, 0.77027027, 0.81081081,
       0.68918919, 0.77027027, 0.81081081]), 'split9_test_score': array([0.69444444, 0.70833333, 0.80555556, 0.69444444, 0.70833333,
       0.80555556, 0.69444444, 0.70833333, 0.80555556, 0.69444444,
       0.70833333, 0.80555556, 0.69444444, 0.70833333, 0.80555556,
       0.69444444, 0.70833333, 0.80555556, 0.69444444, 0.70833333,
       0.80555556, 0.69444444, 0.70833333, 0.80555556, 0.69444444,
       0.70833333, 0.80555556, 0.69444444, 0.70833333, 0.80555556,
       0.69444444, 0.70833333, 0.80555556, 0.69444444, 0.70833333,
       0.80555556, 0.69444444, 0.70833333, 0.80555556, 0.69444444,
       0.70833333, 0.80555556, 0.69444444, 0.70833333, 0.80555556,
       0.69444444, 0.70833333, 0.80555556]), 'mean_score_time': array([0.01180289, 0.00310078, 0.00590143, 0.01060264, 0.00320084,
       0.00630155, 0.01160297, 0.0031008 , 0.00600166, 0.01140275,
       0.00290067, 0.00580151, 0.01190274, 0.00300083, 0.0062016 ,
       0.00980251, 0.00290062, 0.00620124, 0.01150284, 0.003001  ,
       0.00640178, 0.01260335, 0.00300069, 0.00610137, 0.01180296,
       0.00300059, 0.00590112, 0.01040244, 0.00290082, 0.005901  ,
       0.01180286, 0.00300088, 0.00610144, 0.01150274, 0.00310068,
       0.00560234, 0.01140294, 0.0029007 , 0.00590065, 0.01040256,
       0.00300076, 0.00620162, 0.01110277, 0.00320065, 0.00580146,
       0.01200314, 0.00270064, 0.0060014 ]), 'split7_train_score': array([0.69207317, 1.        , 1.        , 0.69207317, 1.        ,
       1.        , 0.69207317, 1.        , 1.        , 0.69207317,
       1.        , 1.        , 0.69207317, 1.        , 1.        ,
       0.69207317, 1.        , 1.        , 0.69207317, 1.        ,
       1.        , 0.69207317, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'split5_test_score': array([0.69444444, 0.73611111, 0.81944444, 0.69444444, 0.73611111,
       0.81944444, 0.69444444, 0.73611111, 0.81944444, 0.69444444,
       0.73611111, 0.81944444, 0.69444444, 0.73611111, 0.81944444,
       0.69444444, 0.73611111, 0.81944444, 0.69444444, 0.73611111,
       0.81944444, 0.69444444, 0.73611111, 0.81944444, 0.69444444,
       0.73611111, 0.81944444, 0.69444444, 0.73611111, 0.81944444,
       0.69444444, 0.73611111, 0.81944444, 0.69444444, 0.73611111,
       0.81944444, 0.69444444, 0.73611111, 0.81944444, 0.69444444,
       0.73611111, 0.81944444, 0.69444444, 0.73611111, 0.81944444,
       0.69444444, 0.73611111, 0.81944444]), 'std_fit_time': array([0.00162848, 0.01795711, 0.00364659, 0.00128103, 0.01897945,
       0.00244209, 0.00186857, 0.0121256 , 0.00241708, 0.00313291,
       0.01081418, 0.00320879, 0.00331902, 0.01665501, 0.00253832,
       0.00161288, 0.01727879, 0.00272858, 0.00329345, 0.016742  ,
       0.00302732, 0.00290794, 0.01517739, 0.00237571, 0.00342012,
       0.01731943, 0.00328886, 0.00126523, 0.01836805, 0.00257159,
       0.0035633 , 0.02004064, 0.00323196, 0.00289217, 0.01465429,
       0.00265598, 0.00261805, 0.01336202, 0.00200327, 0.00313913,
       0.01967261, 0.00290081, 0.00380768, 0.01903823, 0.00231586,
       0.00419748, 0.01911646, 0.00227185]), 'rank_test_score': array([33, 17,  1, 33, 17,  1, 33, 17,  1, 33, 17,  1, 33, 17,  1, 33, 17,
        1, 33, 17,  1, 33, 17,  1, 33, 17,  1, 33, 17,  1, 33, 17,  1, 33,
       17,  1, 33, 17,  1, 33, 17,  1, 33, 17,  1, 33, 17,  1]), 'param_kernel': masked_array(data=['rbf', 'linear', 'poly', 'rbf', 'linear', 'poly',
                   'rbf', 'linear', 'poly', 'rbf', 'linear', 'poly',
                   'rbf', 'linear', 'poly', 'rbf', 'linear', 'poly',
                   'rbf', 'linear', 'poly', 'rbf', 'linear', 'poly',
                   'rbf', 'linear', 'poly', 'rbf', 'linear', 'poly',
                   'rbf', 'linear', 'poly', 'rbf', 'linear', 'poly',
                   'rbf', 'linear', 'poly', 'rbf', 'linear', 'poly',
                   'rbf', 'linear', 'poly', 'rbf', 'linear', 'poly'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'split8_train_score': array([0.69207317, 1.        , 1.        , 0.69207317, 1.        ,
       1.        , 0.69207317, 1.        , 1.        , 0.69207317,
       1.        , 1.        , 0.69207317, 1.        , 1.        ,
       0.69207317, 1.        , 1.        , 0.69207317, 1.        ,
       1.        , 0.69207317, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'split8_test_score': array([0.69444444, 0.75      , 0.77777778, 0.69444444, 0.75      ,
       0.77777778, 0.69444444, 0.75      , 0.77777778, 0.69444444,
       0.75      , 0.77777778, 0.69444444, 0.75      , 0.77777778,
       0.69444444, 0.75      , 0.77777778, 0.69444444, 0.75      ,
       0.77777778, 0.69444444, 0.75      , 0.77777778, 0.69444444,
       0.75      , 0.77777778, 0.69444444, 0.75      , 0.77777778,
       0.69444444, 0.75      , 0.77777778, 0.69444444, 0.75      ,
       0.77777778, 0.69444444, 0.75      , 0.77777778, 0.69444444,
       0.75      , 0.77777778, 0.69444444, 0.75      , 0.77777778,
       0.69444444, 0.75      , 0.77777778]), 'split9_train_score': array([0.69207317, 1.        , 1.        , 0.69207317, 1.        ,
       1.        , 0.69207317, 1.        , 1.        , 0.69207317,
       1.        , 1.        , 0.69207317, 1.        , 1.        ,
       0.69207317, 1.        , 1.        , 0.69207317, 1.        ,
       1.        , 0.69207317, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'std_score_time': array([1.16617545e-03, 2.99803702e-04, 5.38557197e-04, 1.02017894e-03,
       6.00234728e-04, 4.58318084e-04, 1.11407184e-03, 3.00113406e-04,
       6.32786820e-04, 1.42863290e-03, 3.00033959e-04, 4.00161846e-04,
       1.70063554e-03, 4.47287859e-04, 4.00197644e-04, 7.48787033e-04,
       3.00097560e-04, 6.00187360e-04, 8.06492662e-04, 4.19101616e-07,
       4.89979381e-04, 1.35688797e-03, 4.47287994e-04, 5.38716611e-04,
       1.24923364e-03, 4.47287834e-04, 7.00613807e-04, 6.63543115e-04,
       3.00240536e-04, 7.00393777e-04, 9.80143452e-04, 4.47394471e-04,
       3.00145339e-04, 1.02517926e-03, 5.38707724e-04, 4.89137728e-04,
       1.11387477e-03, 3.00200827e-04, 2.99708664e-04, 8.00341555e-04,
       2.48916304e-07, 6.00179128e-04, 5.38654724e-04, 7.48583177e-04,
       6.00107591e-04, 1.00021369e-03, 4.58458557e-04, 4.47287895e-04]), 'split6_train_score': array([0.69207317, 1.        , 1.        , 0.69207317, 1.        ,
       1.        , 0.69207317, 1.        , 1.        , 0.69207317,
       1.        , 1.        , 0.69207317, 1.        , 1.        ,
       0.69207317, 1.        , 1.        , 0.69207317, 1.        ,
       1.        , 0.69207317, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'mean_fit_time': array([0.10852747, 0.1139293 , 0.08292141, 0.09662528, 0.1126291 ,
       0.08382154, 0.10892808, 0.11082799, 0.0844218 , 0.1073277 ,
       0.11412952, 0.08412147, 0.10772793, 0.11743014, 0.08242118,
       0.0990253 , 0.1113287 , 0.08342173, 0.10962806, 0.11122863,
       0.08582203, 0.11152875, 0.11743021, 0.08462186, 0.11012836,
       0.11472962, 0.08532248, 0.10102634, 0.11272905, 0.08432198,
       0.11192892, 0.11532948, 0.08362157, 0.11322947, 0.11162882,
       0.08352139, 0.11252892, 0.10752747, 0.0837224 , 0.10352659,
       0.11272883, 0.08432159, 0.11292918, 0.11753044, 0.08322146,
       0.11372948, 0.11452949, 0.08322153]), 'std_test_score': array([0.00258137, 0.03461405, 0.03083462, 0.00258137, 0.03461405,
       0.03083462, 0.00258137, 0.03461405, 0.03083462, 0.00258137,
       0.03461405, 0.03083462, 0.00258137, 0.03461405, 0.03083462,
       0.00258137, 0.03461405, 0.03083462, 0.00258137, 0.03461405,
       0.03083462, 0.00258137, 0.03461405, 0.03083462, 0.00258137,
       0.03461405, 0.03083462, 0.00258137, 0.03461405, 0.03083462,
       0.00258137, 0.03461405, 0.03083462, 0.00258137, 0.03461405,
       0.03083462, 0.00258137, 0.03461405, 0.03083462, 0.00258137,
       0.03461405, 0.03083462, 0.00258137, 0.03461405, 0.03083462,
       0.00258137, 0.03461405, 0.03083462]), 'split4_test_score': array([0.69444444, 0.80555556, 0.76388889, 0.69444444, 0.80555556,
       0.76388889, 0.69444444, 0.80555556, 0.76388889, 0.69444444,
       0.80555556, 0.76388889, 0.69444444, 0.80555556, 0.76388889,
       0.69444444, 0.80555556, 0.76388889, 0.69444444, 0.80555556,
       0.76388889, 0.69444444, 0.80555556, 0.76388889, 0.69444444,
       0.80555556, 0.76388889, 0.69444444, 0.80555556, 0.76388889,
       0.69444444, 0.80555556, 0.76388889, 0.69444444, 0.80555556,
       0.76388889, 0.69444444, 0.80555556, 0.76388889, 0.69444444,
       0.80555556, 0.76388889, 0.69444444, 0.80555556, 0.76388889,
       0.69444444, 0.80555556, 0.76388889]), 'split3_train_score': array([0.69266055, 1.        , 1.        , 0.69266055, 1.        ,
       1.        , 0.69266055, 1.        , 1.        , 0.69266055,
       1.        , 1.        , 0.69266055, 1.        , 1.        ,
       0.69266055, 1.        , 1.        , 0.69266055, 1.        ,
       1.        , 0.69266055, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'std_train_score': array([0.00028776, 0.        , 0.        , 0.00028776, 0.        ,
       0.        , 0.00028776, 0.        , 0.        , 0.00028776,
       0.        , 0.        , 0.00028776, 0.        , 0.        ,
       0.00028776, 0.        , 0.        , 0.00028776, 0.        ,
       0.        , 0.00028776, 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        ]), 'mean_train_score': array([0.69230812, 1.        , 1.        , 0.69230812, 1.        ,
       1.        , 0.69230812, 1.        , 1.        , 0.69230812,
       1.        , 1.        , 0.69230812, 1.        , 1.        ,
       0.69230812, 1.        , 1.        , 0.69230812, 1.        ,
       1.        , 0.69230812, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ]), 'split4_train_score': array([0.69207317, 1.        , 1.        , 0.69207317, 1.        ,
       1.        , 0.69207317, 1.        , 1.        , 0.69207317,
       1.        , 1.        , 0.69207317, 1.        , 1.        ,
       0.69207317, 1.        , 1.        , 0.69207317, 1.        ,
       1.        , 0.69207317, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        ])}
SVC(C=0.01, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.004, kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)
Stop grid search 2019-01-04 23:48:05.475262
Elapsed grid search time 0:00:21.164479
Start learning with best params at 2019-01-04 23:48:05.475262
Stop learning 2019-01-04 23:48:06.422507
Elapsed learning time 0:00:00.947245
Printing Test labels
[ 1 -1 -1  1 -1 -1 -1  1 -1 -1  1 -1  1 -1 -1  1 -1 -1 -1 -1  1 -1 -1 -1
 -1  1  1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1  1  1
 -1 -1 -1 -1 -1  1 -1 -1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1
  1  1  1 -1 -1 -1  1  1 -1 -1  1 -1  1  1  1  1 -1 -1 -1 -1 -1  1 -1  1
 -1  1  1 -1  1  1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1
 -1 -1 -1  1 -1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1  1  1  1 -1  1 -1 -1 -1  1
  1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1  1  1 -1 -1  1
 -1 -1 -1  1 -1  1 -1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1 -1  1  1 -1 -1 -1
 -1 -1 -1  1 -1  1  1 -1 -1 -1 -1 -1  1 -1  1  1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1  1  1 -1 -1 -1 -1 -1  1  1 -1  1 -1 -1  1 -1 -1 -1 -1  1 -1
  1 -1 -1 -1 -1  1 -1 -1 -1 -1  1 -1 -1  1 -1 -1  1  1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1  1  1 -1 -1  1 -1 -1  1  1 -1 -1  1 -1 -1 -1  1 -1  1 -1 -1
 -1 -1 -1  1 -1 -1  1 -1 -1 -1 -1  1 -1  1  1 -1  1 -1 -1 -1 -1 -1 -1 -1
 -1 -1  1  1  1 -1  1  1 -1 -1 -1 -1 -1  1  1 -1  1 -1 -1  1 -1  1 -1 -1
  1 -1  1  1  1 -1 -1 -1 -1 -1 -1  1 -1  1 -1 -1 -1  1 -1 -1  1  1  1  1
 -1 -1 -1 -1 -1 -1 -1  1 -1  1 -1  1 -1 -1 -1  1 -1  1 -1 -1  1 -1  1 -1
  1 -1  1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1  1 -1 -1 -1 -1 -1  1 -1 -1 -1 -1
 -1 -1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1  1 -1
 -1 -1 -1 -1 -1 -1 -1  1 -1  1 -1  1 -1 -1 -1  1  1 -1 -1 -1 -1  1 -1 -1
 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1 -1 -1 -1
 -1  1 -1  1 -1 -1 -1 -1  1 -1 -1 -1 -1  1 -1  1 -1  1  1  1 -1 -1 -1  1
 -1 -1  1  1  1 -1 -1  1  1 -1 -1 -1  1 -1  1  1 -1  1 -1  1 -1 -1 -1 -1
 -1  1 -1 -1  1 -1 -1 -1 -1  1 -1 -1 -1  1 -1 -1 -1 -1  1  1 -1  1 -1  1
  1 -1 -1 -1 -1 -1  1  1 -1  1 -1  1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1
  1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1  1  1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
  1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1  1 -1 -1 -1 -1 -1  1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1 -1  1  1  1 -1 -1 -1  1 -1 -1 -1
 -1 -1 -1 -1 -1 -1  1  1  1  1 -1 -1 -1 -1  1 -1 -1 -1 -1  1 -1 -1  1 -1
 -1  1  1 -1 -1  1 -1  1 -1 -1 -1  1  1 -1 -1 -1  1 -1 -1 -1 -1 -1  1  1
 -1 -1  1  1  1 -1 -1 -1  1 -1 -1 -1  1 -1 -1 -1 -1  1  1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1  1 -1 -1 -1 -1  1 -1  1 -1 -1  1  1  1 -1 -1 -1  1 -1 -1
 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1  1  1 -1  1 -1 -1  1 -1 -1  1 -1 -1
 -1 -1 -1 -1 -1 -1 -1  1  1  1  1 -1 -1 -1 -1 -1  1 -1 -1 -1 -1 -1  1  1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1  1 -1 -1 -1 -1 -1  1  1 -1  1 -1
 -1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1 -1  1 -1 -1
  1 -1  1 -1 -1  1 -1 -1  1  1 -1 -1 -1  1  1 -1 -1  1  1 -1 -1 -1 -1 -1
 -1 -1  1  1 -1 -1 -1 -1 -1  1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1
  1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1  1 -1 -1 -1 -1 -1]
<class 'numpy.ndarray'>
Printing our predictions
[ 1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1 -1
 -1  1  1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1  1 -1
 -1  1  1 -1 -1 -1  1 -1 -1 -1 -1 -1  1  1 -1  1 -1 -1 -1 -1 -1  1 -1  1
 -1  1  1 -1  1 -1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1  1 -1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1  1  1 -1  1  1 -1 -1 -1
  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1  1  1 -1  1
 -1 -1 -1  1 -1 -1 -1 -1 -1  1 -1 -1 -1 -1  1  1 -1 -1 -1  1  1 -1  1 -1
 -1 -1 -1  1  1  1  1 -1 -1 -1 -1 -1  1 -1  1  1 -1 -1 -1  1 -1 -1 -1 -1
 -1 -1 -1 -1  1  1 -1 -1 -1 -1 -1  1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1
  1 -1 -1 -1 -1  1 -1 -1  1 -1  1 -1 -1  1 -1 -1  1  1 -1 -1 -1  1 -1 -1
 -1 -1 -1 -1  1  1 -1 -1  1 -1 -1 -1  1 -1 -1  1  1 -1 -1 -1 -1 -1 -1 -1
 -1 -1 -1  1 -1 -1  1  1 -1 -1 -1  1 -1  1  1 -1  1 -1 -1 -1 -1 -1 -1 -1
 -1 -1  1  1  1 -1  1  1 -1 -1 -1 -1 -1  1  1 -1 -1 -1 -1  1 -1  1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1  1 -1 -1 -1 -1 -1 -1  1  1 -1  1
 -1 -1 -1 -1 -1 -1 -1  1 -1  1  1  1  1 -1 -1 -1 -1  1 -1 -1  1 -1 -1 -1
  1 -1  1 -1 -1 -1  1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 -1 -1  1 -1 -1  1 -1  1 -1 -1 -1 -1 -1 -1  1 -1 -1 -1 -1  1 -1 -1  1 -1
 -1  1 -1 -1 -1 -1 -1 -1 -1  1 -1  1  1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1
 -1 -1 -1  1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1  1  1 -1  1 -1 -1 -1 -1 -1 -1
 -1 -1  1  1  1 -1 -1 -1  1 -1 -1 -1 -1  1 -1  1 -1  1 -1 -1 -1 -1 -1  1
 -1 -1  1  1  1 -1 -1  1  1  1 -1 -1  1 -1  1  1 -1  1 -1  1 -1 -1 -1 -1
 -1  1 -1 -1  1 -1 -1 -1 -1  1 -1 -1 -1  1 -1 -1 -1  1  1 -1 -1 -1 -1  1
 -1 -1 -1 -1 -1 -1  1 -1 -1 -1 -1  1 -1  1 -1 -1 -1 -1 -1 -1  1 -1 -1 -1
 -1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1  1  1 -1 -1 -1 -1 -1 -1  1 -1 -1 -1
  1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1
 -1 -1 -1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1  1  1  1 -1  1  1  1 -1 -1 -1
 -1 -1 -1 -1 -1 -1  1  1  1  1 -1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1  1 -1
 -1 -1  1 -1 -1 -1 -1  1 -1  1 -1  1  1 -1 -1 -1 -1  1 -1 -1 -1 -1  1 -1
 -1 -1 -1  1  1 -1  1 -1  1 -1 -1 -1  1 -1 -1 -1 -1 -1  1 -1 -1 -1 -1  1
  1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1  1 -1 -1  1  1 -1 -1 -1 -1  1 -1 -1
 -1 -1 -1 -1  1 -1 -1 -1 -1 -1  1 -1  1 -1 -1  1 -1 -1  1 -1 -1  1 -1 -1
 -1 -1 -1 -1 -1 -1 -1 -1  1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1 -1  1 -1 -1 -1 -1 -1  1  1 -1 -1 -1
 -1 -1 -1 -1  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1  1 -1 -1  1 -1 -1
 -1 -1  1 -1  1  1 -1 -1  1  1 -1  1 -1 -1  1  1 -1 -1 -1  1 -1  1 -1 -1
 -1 -1 -1  1 -1 -1 -1 -1 -1  1 -1 -1  1 -1 -1  1 -1 -1 -1 -1 -1 -1  1 -1
  1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  1  1 -1 -1 -1 -1 -1]
<class 'numpy.ndarray'>
0.865934065934066
Classification report for classifier SVC(C=0.01, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.004, kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False):
              precision    recall  f1-score   support

          -1       0.88      0.94      0.91       650
           1       0.81      0.69      0.75       260

   micro avg       0.87      0.87      0.87       910
   macro avg       0.85      0.81      0.83       910
weighted avg       0.86      0.87      0.86       910


Confusion matrix:
[[608  42]
 [ 80 180]]
Accuracy=0.865934065934066
